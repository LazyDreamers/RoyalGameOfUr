{"version":3,"sources":["game_2/square.js","game_2/board.js","game_2/GameInfo.js","game_2/MakeDefaultsStore.js","game_2/game.js","App.js","index.js"],"names":["SQUARE","props","square","className","aktywny","onClick","value","player","BOARD","stan","this","map","key","uid","napis","React","Component","GameInfo","dice","start","MakeDefaultsStore","update","store","_base","A","extra","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","R","S","T","U","W","X","Y","Z","_pathsForPlayers","White","Black","_render","getFirstPlayer","getPlayerPath","nextPlayer","renderSquares","kolumna","flat","Delay","delay","a","Promise","resolve","setTimeout","GAME","startGameLoop","squares","setState","roll_dice","playerPath","actDice","actPlayer","activeSquares","zwraca_pola_do_aktywacji","length","koniec_tury","czekaj_na_wskazanie_pola","sourceSquare","console","log","state","makeMove","wykonaj_ruch","warn","czy_wygral_gracz","koniec_gry","wynikKostki","Math","floor","random","forEach","idx","push","reject","receipt","przetestuj_wykonaj_ruch","squaresX","slice","enemyPlayer","enemyPath","sourceIndex","findIndex","squareOnPath","targetOnPath","enemyFirstSquare","playerLastSquare","enemyOnState","squareOnState","firstOnState","lastOnState","sourceOnState","targetOnState","alert","gracz","kostka","handleClick","error","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2628022.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.css\";\r\n\r\nfunction SQUARE (props) {\r\n const square = props.square\r\n\r\n    return (\r\n    <button \r\n    className={props.square.aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n    onClick= {props.onClick} \r\n    >\r\n        {square.value} <br /> {square.player}\r\n        </button>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SQUARE;","import React from \"react\";\r\nimport SQUARE from \"./square\";\r\nimport \"./Board.css\";\r\n\r\nclass BOARD extends React.Component {\r\n  render() {\r\n    const napis = \"guzik\";\r\n    const stan = this.props.stan;\r\n\r\n    return (\r\n      <ul className= \"board\">\r\n        {/* <h2>\"komponent BOARD\" </h2> */}\r\n\r\n        {stan.map((square) => (\r\n          <SQUARE\r\n            key={square.uid}\r\n            square={square}\r\n            onClick={() => this.props.onClick(square)}\r\n            napis={napis}\r\n          />\r\n        ))}\r\n\r\n        {/* <SQUARE onClick= {() => this.props.onClick()} napis= {napis} /> */}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BOARD;\r\n","import React from \"react\";\r\nimport \"./GameInfo.css\";\r\n\r\nfunction GameInfo(props) {\r\n  return (\r\n    <div className=\"gameInfo\">\r\n      <button \r\n      className= {(props.dice === \"null\") ? \"buttonActive\" : \"buttonInactive\"}\r\n      onClick={props.start}\r\n      >\r\n        START Gry\r\n      </button>\r\n\r\n      <div className=\"infobox\">\r\n        <p>Aktualny gracz:</p>\r\n        <p className=\"infoValue\"> {props.player} </p>\r\n      </div>\r\n      <div className=\"infobox\">\r\n        <p>Wynik kostki:</p>\r\n        <p className=\"infoValue\"> {props.dice} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default GameInfo;\r\n","\r\n\r\nfunction MakeDefaultsStore() {\r\n  const update = () => {};\r\n\r\n  const store = {\r\n    _base: {\r\n      ///\r\n      A: {\r\n        uid: \"A\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      B: {\r\n        uid: \"B\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      C: {\r\n        uid: \"C\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      D: {\r\n        uid: \"D\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      E: {\r\n        uid: \"E\",\r\n        value: 3,\r\n        player: \"White\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      F: {\r\n        uid: \"F\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      G: {\r\n        uid: \"G\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      H: {\r\n        uid: \"H\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      I: {\r\n        uid: \"I\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      J: {\r\n        uid: \"J\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      K: {\r\n        uid: \"K\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      L: {\r\n        uid: \"L\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      M: {\r\n        uid: \"M\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      N: {\r\n        uid: \"N\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      O: {\r\n        uid: \"O\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      P: {\r\n        uid: \"P\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      R: {\r\n        uid: \"R\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      S: {\r\n        uid: \"S\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      T: {\r\n        uid: \"T\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      U: {\r\n        uid: \"U\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      W: {\r\n        uid: \"W\",\r\n        value: 3,\r\n        player: \"Black\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      X: {\r\n        uid: \"X\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      Y: {\r\n        uid: \"Y\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      Z: {\r\n        uid: \"Z\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      }\r\n    },\r\n    _pathsForPlayers: {\r\n      ///\r\n      White: [\"E\", \"D\", \"C\", \"B\", \"A\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"H\", \"G\", \"F\"],\r\n      Black: [\"W\", \"U\", \"T\", \"S\", \"R\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Z\", \"Y\", \"X\"]\r\n    },\r\n    _render: [\r\n      ///\r\n      [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"],\r\n      [\"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\"],\r\n      [\"R\", \"S\", \"T\", \"U\", \"W\", \"X\", \"Y\", \"Z\"]\r\n    ],\r\n    \r\n    getFirstPlayer() {\r\n      return \"White\";\r\n    },\r\n    getPlayerPath(player) {\r\n      // TODO: Co jak player nie istnieje?\r\n      return this._pathsForPlayers[player].map(uid => {\r\n        return this._base[uid];\r\n      });\r\n    },\r\n    nextPlayer: player => {\r\n      return player === \"White\" ? \"Black\" : \"White\";\r\n    },\r\n    renderSquares() {\r\n      return this._render\r\n        .map(kolumna => kolumna.map(uid => this._base[uid]))\r\n        .flat();\r\n    },\r\n  \r\n  }\r\n  store.receipt = null;\r\n  return store;\r\n}\r\n\r\n\r\nexport default MakeDefaultsStore;","import React from \"react\";\r\nimport BOARD from \"./board\";\r\nimport GameInfo from \"./GameInfo\";\r\nimport MakeDefaultsStore from \"./MakeDefaultsStore\";\r\n\r\nasync function Delay(delay) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nclass GAME extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    //const store = MakeDefaultsStore();\r\n    this.state = {\r\n      squares: [], // store.renderSquares(),\r\n      activeSquares: [],\r\n      actPlayer: \"gracz\",\r\n      actDice: \"null\",\r\n    };\r\n  }\r\n\r\n  /////////////////////////////  Logika gry:\r\n\r\n  startGameLoop = async () => {\r\n    // const store = this.state.store;\r\n    const store = MakeDefaultsStore();\r\n    let player = store.getFirstPlayer();\r\n    let squares = store.renderSquares();\r\n    this.setState({\r\n      squares: squares,\r\n    });\r\n\r\n    // console.log(`START GRY, zaczyna: ${player}`);\r\n\r\n    while (true) {\r\n      await Delay(800);\r\n      const dice = this.roll_dice();\r\n      const playerPath = store.getPlayerPath(player);\r\n      this.setState({\r\n        actDice: dice,\r\n        actPlayer: player,\r\n      });\r\n\r\n      const activeSquares = this.zwraca_pola_do_aktywacji({\r\n        playerPath,\r\n        dice,\r\n        player,\r\n      });\r\n\r\n      this.setState({ activeSquares: activeSquares });\r\n\r\n      if (activeSquares.length === 0) {\r\n        player = store.nextPlayer(player);\r\n        this.koniec_tury();\r\n        continue;\r\n      }\r\n\r\n      const sourceSquare = await this.czekaj_na_wskazanie_pola(activeSquares);\r\n      // console.log(`czekaj_na_wskazanie_pola zrwóciło: `, sourceSquare);\r\n      console.log(\"AKTYWNE POLA: \", this.state.activeSquares);\r\n      const makeMove = this.wykonaj_ruch({\r\n        store,\r\n        squares,\r\n        playerPath,\r\n        sourceSquare,\r\n        dice,\r\n        player,\r\n      });\r\n      this.setState({ squares: makeMove, activeSquares: [] });\r\n      console.warn(this.state.squares)\r\n      if (this.czy_wygral_gracz({ playerPath })) {\r\n        break;\r\n      }\r\n      const targetSquare = false;\r\n      if (!targetSquare.extra) {\r\n        player = store.nextPlayer(player);\r\n        console.warn(\"::WHILE:: sprawdź extra: Zmiana gracza.\");\r\n      }\r\n\r\n      this.koniec_tury();\r\n    }\r\n    //\r\n\r\n    this.koniec_gry(squares);\r\n    this.setState({\r\n      actDice: \"null\",\r\n      actPlayer: player,\r\n    });\r\n    // console.log(`Gra się zakończyła, wygrał player: `, player);\r\n    // console.log(this.state.squares);\r\n  };\r\n\r\n  ////////////////////////////////////////////// RENDER:\r\n\r\n  render() {\r\n    const stan = this.state.squares;\r\n    let gracz = this.state.actPlayer;\r\n    const kostka = this.state.actDice;\r\n    // console.log(\"RENDER\", gracz);\r\n    return (\r\n      <>\r\n        <h1>\"Game Of Ur\"</h1>\r\n\r\n        <GameInfo start={this.startGameLoop} player={gracz} dice={kostka} />\r\n\r\n        <BOARD stan={stan} onClick={(square) => this.handleClick(square)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  ///////////////////////////////////////////// Funkcje pomocnicze:\r\n\r\n  sendGameInfo(player, dice) {\r\n    const gracz = player;\r\n    this.setState({\r\n      actPlayer: gracz,\r\n      actDice: dice,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      console.log(this.state);\r\n    }, 100);\r\n  }\r\n\r\n  handleClick(square) {\r\n    if (this.receipt) {\r\n      const potwierdzenie = this.receipt;\r\n      potwierdzenie.resolve(square);\r\n    } else {\r\n      console.error(\" !  ojjojoj, brakuje paragonu\");\r\n    }\r\n    // console.log(\"kliknięto w guzik\", square.uid);\r\n  }\r\n\r\n  roll_dice = () => {\r\n    const wynikKostki = Math.floor(Math.random() * (15 - 0 + 1) + 0);\r\n    console.log(`wynik kostki:`, wynikKostki);\r\n    if (wynikKostki === 0) {\r\n      return 0;\r\n    } else if (wynikKostki >= 1 && wynikKostki <= 4) {\r\n      return 1;\r\n    } else if (wynikKostki >= 5 && wynikKostki <= 10) {\r\n      return 2;\r\n    } else if (wynikKostki >= 11 && wynikKostki <= 14) {\r\n      return 3;\r\n    } else if (wynikKostki === 15) {\r\n      return 4;\r\n    }\r\n\r\n    // return 2;\r\n  };\r\n\r\n  zwraca_pola_do_aktywacji = ({ playerPath, dice, player }) => {\r\n    const activeSquares = [];\r\n\r\n    playerPath.forEach((square, idx, squares) => {\r\n      // TODO: Mona troche uprościć\r\n      if (!square.value <= 0) {\r\n        if (square.player === player) {\r\n          if (idx + dice <= squares.length - 1) {\r\n            const targetSquare = squares[idx + dice];\r\n            if (targetSquare.player !== player) {\r\n              square.aktywny = true;\r\n              activeSquares.push(square.uid);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return activeSquares;\r\n  };\r\n\r\n  //   czy_jest_jakiekolwiek_aktywne_sourceSquare = (player) => {\r\n  //     const tab = this.state.squares;\r\n  //     const isActive = tab.some(function(el) {\r\n  //       return el.aktywny === true;\r\n  //     });\r\n  //     console.log(\"Jest aktywne sourceSquare\", isActive); //true\r\n  //     return isActive;\r\n  //   };\r\n\r\n  czekaj_na_wskazanie_pola = async (activeSquares) => {\r\n    // console.log(`czekaj_na_wskazanie_pola: AKTYWACJA: `, activeSquares);\r\n\r\n    // for (const square of activeSquares) {\r\n    //   square.aktywny = true;\r\n    // }\r\n\r\n    const sourceSquare = await new Promise((resolve, reject) => {\r\n      this.receipt = { resolve, reject };\r\n    });\r\n\r\n    // for (const square of activeSquares) {\r\n    //   square.aktywny = false;\r\n    // }\r\n\r\n    return sourceSquare;\r\n  };\r\n\r\n  przetestuj_wykonaj_ruch = () => {\r\n    // // CASE 1\r\n    // const store = MakeDefaultsStore();\r\n    // const dice = 2;\r\n    // const sourceSquare = 1;\r\n    // const player = \"White\";\r\n    // this.wykonaj_ruch({store, sourceSquare, dice, player});\r\n    // https://www.youtube.com/watch?v=IJzRPTSfXHY\r\n    // // if (efbfglkbndfiuhvdfj === [\"A\" , \"B\"]\r\n  };\r\n\r\n  wykonaj_ruch = ({ store, squares, playerPath, sourceSquare, dice, player }) => {\r\n    // const playerPath = store.getPlayerPath(player);\r\n    console.log(\"STATE first\", squares);\r\n\r\n    const squaresX = squares.slice();\r\n    const enemyPlayer = store.nextPlayer(player);\r\n    const enemyPath = store.getPlayerPath(enemyPlayer);\r\n    const sourceIndex = playerPath.findIndex((squareOnPath) => { return squareOnPath.uid === sourceSquare.uid });\r\n    const targetOnPath = playerPath[sourceIndex + dice];\r\n    const enemyFirstSquare = enemyPath[0];\r\n    const playerLastSquare = playerPath[playerPath.length - 1];\r\n\r\n    const enemyOnState = squaresX.findIndex((squareOnState) => { return squareOnState.uid === enemyFirstSquare.uid });\r\n    const firstOnState = squaresX.findIndex((squareOnState) => { return squareOnState.uid === playerPath[0].uid });\r\n\r\n    const lastOnState = squaresX.findIndex((squareOnState) => { return squareOnState.uid === playerLastSquare.uid });\r\n    const sourceOnState = squaresX.findIndex((squareOnState) => { return squareOnState.uid === sourceSquare.uid });  \r\n    const targetOnState = squaresX.findIndex((squareOnState) => { return squareOnState.uid === targetOnPath.uid });\r\n\r\n    console.log(\"OS   player FIRST index: \", firstOnState);\r\n\r\n    console.log(\"OS   player last index: \", lastOnState);\r\n    console.log(\"OS   Enemy first index: \", enemyOnState);\r\n    console.log(\"OS source square index: \", sourceOnState)\r\n    console.log(\"OS target square index: \", targetOnState)\r\n\r\n    if (squaresX[targetOnState].player === enemyPlayer) {\r\n      squaresX[targetOnState].value -= 1;\r\n      squaresX[enemyOnState].value += 1;\r\n    }\r\n\r\n    squaresX[sourceOnState].value -= 1;\r\n    squaresX[sourceOnState].player = null;\r\n\r\n    squaresX[targetOnState].value += 1;\r\n    squaresX[targetOnState].player = player;\r\n\r\n    squaresX[lastOnState].player = null;\r\n    squaresX[firstOnState].player = player;\r\n\r\n    squaresX.forEach(square => {square.aktywny = false})\r\n\r\n    return squaresX;\r\n  };\r\n\r\n  czy_wygral_gracz = ({ playerPath }) => {\r\n    const lastSquare = playerPath[playerPath.length - 1];\r\n    return lastSquare.value === 3 ? true : false;\r\n  };\r\n\r\n  koniec_tury = () => {\r\n    console.log(`koniec tury`);\r\n  };\r\n\r\n  koniec_gry = (squares) => {\r\n    // const squares = this.state.squares;\r\n\r\n    // for (const square of squares) {\r\n    //   square.value = 0;\r\n    //   square.player = null;\r\n    //   square.aktywny = false;\r\n    // }\r\n    // squares[0].player = \"White\";\r\n    // squares[5].player = \"Black\";\r\n    // squares[0].value = 2;\r\n    // squares[5].value = 2;\r\n\r\n    // this.setState({\r\n    //   squares: squares,\r\n    //   actPlayer: \"gracz\",\r\n    //   actDice: \"null\",\r\n    // });\r\n    console.log(`koniec gry; FUNKCJA, KONIEC GRY`);\r\n    alert(\"PRZESZEDŁEŚ CAŁA GRĘ!! GRATULUJĘ!!\");\r\n  };\r\n}\r\n\r\nexport default GAME;\r\n","import React from \"react\";\nimport \"./styles.scss\";\n// import Board from \"./game/Board\";\nimport GAME from \"./game_2/game\";\n\n// var player = 1;\n\n// // const numbers = [1, 2, 3, 4, 5];\n// const numbers = [1, 2];\n\n// const items = numbers.map((numbers) => <Tile uuid={numbers} />);\n\nconst App = () => (\n  <>\n    <div>\n      {/* <Board /> */}\n      <GAME />\n    </div>\n  </>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}