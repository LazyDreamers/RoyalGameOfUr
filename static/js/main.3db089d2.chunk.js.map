{"version":3,"sources":["game_2/square.js","game_2/board.js","game_2/GameInfo.js","game_2/MakeDefaultsStore.js","game_2/game.js","App.js","index.js"],"names":["SQUARE","props","square","className","aktywny","onClick","value","player","BOARD","stan","this","map","key","uid","napis","React","Component","GameInfo","dice","start","MakeDefaultsStore","store","update","_base","A","extra","B","C","D","E","F","G","H","I","J","_pathsForPlayers","White","Black","_render","getFirstPlayer","getPlayerPath","nextPlayer","renderSquares","kolumna","flat","Delay","delay","a","Promise","resolve","setTimeout","GAME","startGameLoop","state","console","log","error","rzucamy_kostka","sendGameInfo","polaDoAktywacji","zwraca_pola_do_aktywacji","length","koniec_tury","czekaj_na_wskazanie_pola","pole","targetSquare","wykonaj_ruch","czy_wygral_gracz","warn","koniec_gry","squares","wynikKostki","Math","floor","random","tab","slice","forEach","idx","push","item","index","arr","setState","pola","reject","receipt","playerPath","enemyPath","sourceIndex","findIndex","squareOnPath","sourceSquare","enemyFirstSquare","playerLastSquare","actPlayer","actDice","alert","gracz","kostka","handleClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3db089d2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.css\";\r\n\r\nfunction SQUARE (props) {\r\n const square = props.square\r\n\r\n    return (\r\n    <button \r\n    className={props.square.aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n    onClick= {props.onClick} \r\n    >\r\n        {square.value} <br /> {square.player}\r\n        </button>\r\n        \r\n    )\r\n}\r\n\r\n\r\n\r\nexport default SQUARE;","import React from \"react\";\r\nimport SQUARE from \"./square\";\r\nimport \"./Board.css\";\r\n\r\nclass BOARD extends React.Component {\r\n  render() {\r\n    const napis = \"guzik\";\r\n    const stan = this.props.stan;\r\n\r\n    return (\r\n      <ul className= \"board\">\r\n        {/* <h2>\"komponent BOARD\" </h2> */}\r\n\r\n        {stan.map((square) => (\r\n          <SQUARE\r\n            key={square.uid}\r\n            square={square}\r\n            onClick={() => this.props.onClick(square)}\r\n            napis={napis}\r\n          />\r\n        ))}\r\n\r\n        {/* <SQUARE onClick= {() => this.props.onClick()} napis= {napis} /> */}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BOARD;\r\n","import React from \"react\";\r\nimport \"./GameInfo.css\";\r\n\r\nfunction GameInfo(props) {\r\n  return (\r\n    <div className=\"gameInfo\">\r\n      <button \r\n      className= {(props.dice === \"null\") ? \"buttonActive\" : \"buttonInactive\"}\r\n      onClick={props.start}\r\n      >\r\n        START Gry\r\n      </button>\r\n\r\n      <div className=\"infobox\">\r\n        <p>Aktualny gracz:</p>\r\n        <p className=\"infoValue\"> {props.player} </p>\r\n      </div>\r\n      <div className=\"infobox\">\r\n        <p>Wynik kostki:</p>\r\n        <p className=\"infoValue\"> {props.dice} </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default GameInfo;\r\n","\r\n\r\nfunction MakeDefaultsStore() {\r\n    const update = () => {};\r\n  \r\n    const store = {\r\n      _base: {\r\n        ///\r\n        A: {\r\n          uid: \"A\",\r\n          value: 2,\r\n          player: \"White\",\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        B: {\r\n          uid: \"B\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        C: {\r\n          uid: \"C\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        D: {\r\n          uid: \"D\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        E: {\r\n          uid: \"E\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        F: {\r\n          uid: \"F\",\r\n          value: 2,\r\n          player: \"Black\",\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        G: {\r\n          uid: \"G\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        H: {\r\n          uid: \"H\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        I: {\r\n          uid: \"I\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        },\r\n        J: {\r\n          uid: \"J\",\r\n          value: 0,\r\n          player: null,\r\n          aktywny: false,\r\n          extra: false,\r\n          update\r\n        }\r\n      },\r\n      _pathsForPlayers: {\r\n        ///\r\n        White: [\"A\", \"B\", \"C\", \"D\", \"E\"],\r\n        Black: [\"F\", \"G\", \"H\", \"I\", \"J\"]\r\n      },\r\n      _render: [\r\n        ///\r\n        [\"A\", \"B\", \"C\", \"D\", \"E\"],\r\n        [\"F\", \"G\", \"H\", \"I\", \"J\"]\r\n      ],\r\n      \r\n      getFirstPlayer() {\r\n        return \"White\";\r\n      },\r\n      getPlayerPath(player) {\r\n        // TODO: Co jak player nie istnieje?\r\n        return this._pathsForPlayers[player].map(uid => {\r\n          return this._base[uid];\r\n        });\r\n      },\r\n      nextPlayer: player => {\r\n        return player === \"White\" ? \"Black\" : \"White\";\r\n      },\r\n      renderSquares() {\r\n        return this._render\r\n          .map(kolumna => kolumna.map(uid => this._base[uid]))\r\n          .flat();\r\n      },\r\n    \r\n    }\r\n    store.receipt = null;\r\n    return store;\r\n  }\r\n\r\n\r\n  export default MakeDefaultsStore;","import React from \"react\";\r\nimport BOARD from \"./board\";\r\nimport GameInfo from \"./GameInfo\";\r\nimport MakeDefaultsStore from \"./MakeDefaultsStore\";\r\n\r\nconst store = MakeDefaultsStore();\r\n\r\nasync function Delay(delay) {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nclass GAME extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      store: store,\r\n      squares: store.renderSquares(),\r\n      actPlayer: \"gracz\",\r\n      actDice: \"null\"\r\n    };\r\n  }\r\n\r\n  /////////////////////////////  Logika gry:\r\n\r\n  startGameLoop = async () => {\r\n    const store = this.state.store;\r\n\r\n    let player = store.getFirstPlayer();\r\n\r\n    console.log(`START GRY, zaczyna: ${player}`);\r\n\r\n    while (true) {\r\n        \r\n        await Delay(800);\r\n        // poczÄtek tury\r\n        console.error(`Teraz player: ${player}`);\r\n        \r\n        const dice = this.rzucamy_kostka();\r\n        this.sendGameInfo(player, dice);\r\n      const polaDoAktywacji = this.zwraca_pola_do_aktywacji({\r\n        store,\r\n        dice,\r\n        player,\r\n      });\r\n\r\n      if (polaDoAktywacji.length === 0) {\r\n        player = store.nextPlayer(player);\r\n        this.koniec_tury();\r\n        continue;\r\n      }\r\n\r\n      const pole = await this.czekaj_na_wskazanie_pola(polaDoAktywacji);\r\n      console.log(`czekaj_na_wskazanie_pola zrwÃ³ciÅo: `, pole);\r\n\r\n      const targetSquare = this.wykonaj_ruch({ store, pole, dice, player });\r\n\r\n      if (this.czy_wygral_gracz({ store, player })) {\r\n        break;\r\n      }\r\n\r\n      if (!targetSquare.extra) {\r\n        player = store.nextPlayer(player);\r\n        console.warn(\"::WHILE:: sprawdÅº extra: Zmiana gracza.\");\r\n      }\r\n\r\n      this.koniec_tury();\r\n    }\r\n    //\r\n\r\n    this.koniec_gry(player);\r\n    console.log(`Gra siÄÂ zakoÅczyÅa, wygraÅ player: `, player);\r\n    console.log(this.state.squares);\r\n  };\r\n\r\n  ////////////////////////////////////////////// RENDER:\r\n\r\n  render() {\r\n    const stan = this.state.squares;\r\n    let gracz = this.state.actPlayer;\r\n    const kostka = this.state.actDice;\r\n    console.log(\"RENDER\", gracz);\r\n    return (\r\n      <>\r\n        <h1>\"Game Of Ur\"</h1>\r\n\r\n        <GameInfo start={this.startGameLoop} player={gracz} dice={kostka} />\r\n\r\n        <BOARD stan={stan} onClick={(square) => this.handleClick(square)} />\r\n      </>\r\n    );\r\n  }\r\n\r\n  ///////////////////////////////////////////// Funkcje pomocnicze:\r\n\r\n  sendGameInfo(player, dice) {\r\n    const gracz = player;\r\n    this.setState({\r\n         actPlayer: gracz,\r\n         actDice: dice\r\n        })\r\n\r\n  }\r\n\r\n  handleClick(square) {\r\n    if (this.receipt) {\r\n      const potwierdzenie = this.receipt;\r\n      potwierdzenie.resolve(square);\r\n    } else {\r\n      console.error(\" !  ojjojoj, brakuje paragonu\");\r\n    }\r\n    // console.log(\"klikniÄto w guzik\", square.uid);\r\n  }\r\n\r\n  rzucamy_kostka = () => {\r\n    const wynikKostki = Math.floor(Math.random() * (4 - 0 + 1) + 0);\r\n    console.log(`wynik kostki:`, wynikKostki);\r\n    return wynikKostki;\r\n    // return 2;\r\n  };\r\n\r\n  zwraca_pola_do_aktywacji = ({ store, dice, player }) => {\r\n    const polaDoAktywacji = [];\r\n    const tab = this.state.squares.slice();\r\n    const playerPath = store.getPlayerPath(player);\r\n\r\n    playerPath.forEach((square, idx, squares) => {\r\n      // TODO: Mona troche uproÅciÄ\r\n      if (!square.value <= 0) {\r\n        if (square.player === player) {\r\n          if (idx + dice <= squares.length - 1) {\r\n            const targetSquare = squares[idx + dice];\r\n            if (targetSquare.player !== player) {\r\n              square.aktywny = true;\r\n              polaDoAktywacji.push(square);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n    console.log(tab);\r\n    polaDoAktywacji.forEach((square, idx, squares) => {\r\n      tab.forEach((item, index, arr) => {\r\n        if (item.uid === square.uid) {\r\n          item = square;\r\n        }\r\n      });\r\n    });\r\n    console.log(tab);\r\n    this.setState({ squares: tab });\r\n    // this.forceUpdate()\r\n\r\n    console.log(`zwraca_pola_do_aktywacji: `, polaDoAktywacji);\r\n    return polaDoAktywacji;\r\n  };\r\n\r\n  //   czy_jest_jakiekolwiek_aktywne_pole = (player) => {\r\n  //     const tab = this.state.squares;\r\n  //     const isActive = tab.some(function(el) {\r\n  //       return el.aktywny === true;\r\n  //     });\r\n  //     console.log(\"Jest aktywne pole\", isActive); //true\r\n  //     return isActive;\r\n  //   };\r\n\r\n  czekaj_na_wskazanie_pola = async (pola) => {\r\n    console.log(`czekaj_na_wskazanie_pola: AKTYWACJA: `, pola);\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = true;\r\n      square.update();\r\n    }\r\n\r\n    const pole = await new Promise((resolve, reject) => {\r\n      this.receipt = { resolve, reject };\r\n    });\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = false;\r\n      square.update();\r\n    }\r\n\r\n    return pole;\r\n  };\r\n\r\n  wykonaj_ruch = ({ store, pole, dice, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const enemyPath = store.getPlayerPath(store.nextPlayer(player));\r\n    const state = this.state.squares;\r\n    const sourceIndex = playerPath.findIndex((squareOnPath) => {\r\n      return squareOnPath.uid === pole.uid;\r\n    });\r\n    const sourceSquare = pole;\r\n    const targetSquare = playerPath[sourceIndex + dice];\r\n    const enemyFirstSquare = enemyPath[0];\r\n    const playerLastSquare = playerPath[playerPath.length - 1];\r\n\r\n    console.log(\"PlayerPath\", playerPath);\r\n    console.log(\"SourceSquare\", sourceSquare);\r\n    console.log(\"sourceIndex\", sourceIndex);\r\n    console.log(\"Target\", targetSquare);\r\n    console.log(\"Enemy\", enemyPath);\r\n    console.log(\"Enemy\", enemyFirstSquare);\r\n    console.log(\"STATE\", state);\r\n\r\n    if (targetSquare.player === store.nextPlayer()) {\r\n      enemyFirstSquare.value += 1;\r\n    }\r\n\r\n    sourceSquare.value -= 1;\r\n    targetSquare.value += 1;\r\n    targetSquare.player = player;\r\n\r\n    if (sourceSquare.value === 0) {\r\n      sourceSquare.player = null;\r\n    }\r\n\r\n    if (targetSquare.uid === playerLastSquare.uid) {\r\n      targetSquare.player = null;\r\n    }\r\n\r\n    sourceSquare.update();\r\n    targetSquare.update();\r\n    enemyFirstSquare.update();\r\n\r\n    return targetSquare;\r\n  };\r\n\r\n  czy_wygral_gracz = ({ store, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const lastSquare = playerPath[playerPath.length - 1];\r\n    return lastSquare.value === 2 ? true : false;\r\n  };\r\n\r\n  koniec_tury = () => {\r\n    console.log(`koniec tury`);\r\n  };\r\n\r\n  koniec_gry = () => {\r\n    const squares = this.state.squares;\r\n\r\n    for (const square of squares) {\r\n      square.value = 0;\r\n      square.player = null;\r\n      square.aktywny = false;\r\n    }\r\n    squares[0].player = \"White\";\r\n    squares[5].player = \"Black\";\r\n    squares[0].value = 2;\r\n    squares[5].value = 2;\r\n\r\n    this.setState({ \r\n        squares: squares,\r\n        actPlayer: \"gracz\",\r\n        actDice: \"null\"\r\n     });\r\n    console.log(`koniec gry; FUNKCJA, KONIEC GRY`);\r\n    alert(\"PRZESZEDÅEÅ CAÅA GRÄ!! GRATULUJÄ!!\");\r\n  };\r\n}\r\n\r\nexport default GAME;\r\n","import React from \"react\";\nimport \"./styles.scss\";\n// import Board from \"./game/Board\";\nimport GAME from \"./game_2/game\";\n\n// var player = 1;\n\n// // const numbers = [1, 2, 3, 4, 5];\n// const numbers = [1, 2];\n\n// const items = numbers.map((numbers) => <Tile uuid={numbers} />);\n\nconst App = () => (\n  <>\n    <div>\n      {/* <Board /> */}\n      <GAME />\n    </div>\n  </>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}