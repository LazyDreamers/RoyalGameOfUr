{"version":3,"sources":["game/Square.js","game/Board.js","App.js","index.js"],"names":["Square","uid","square","aktywny","value","player","zmiana","className","onClick","MakeDefaultsState","squares","0","extra","1","2","3","4","5","6","7","8","9","10","11","12","13","14","paths","render","orderSquares","console","debug","this","kolumna","uidSquare","push","Board","fullSquares","state","firstPlayer","receipt","resolve","reject","reason","startGameLoop","a","fullSquaresState","log","aktywnePola","error","reset_stanu_mety_i_startu_i_dezaktywacja_pól","iloscOczek","rzucamy_kostką","sprawdza_dostępne_ruchy_i_aktywuj_pola","length","change_player","alert","koniec_tury","czekaj_na_wskazanie_pola","pole","wykonaj_ruch","czy_wygrał_gracz","sprawdz_extra_targetSquare","koniec_gry","i","setState","wynikKostki","Math","floor","random","warn","currentPlayerPath","path","czy_jest_jakiekolwiek_aktywne_pole","isActive","some","el","pola","Promise","position","index","findIndex","pathIndex","enemyPlayerPath","sourceSquare","targetSquare","enemyValue","checkActive","handleClick","showPlayer","map","key","React","Component","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.111a6f53.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.scss\";\r\n\r\nconst Square = ({ uid, square, aktywny, value, player, zmiana }) => (\r\n  <button\r\n    className={aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n    onClick={() => {\r\n      // console.log(\"Square.js \", { position, value, player });\r\n      zmiana(square);\r\n    }}\r\n  >\r\n    {value} {player}\r\n  </button>\r\n);\r\n\r\n// onClick={() => console.log({position, value, player})\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./Board.scss\";\r\n// import MakeDefaultsSquares from \"./STATE.js\";\r\n\r\nfunction MakeDefaultsState() {\r\n  return {\r\n    squares: {\r\n      0: { uid: 0, value: 0, player: 0, aktywny: false, extra: false },\r\n      1: { uid: 1, value: 0, player: 0, aktywny: false, extra: false },\r\n      2: { uid: 2, value: 2, player: 1, aktywny: false, extra: false },\r\n      3: { uid: 3, value: 0, player: 0, aktywny: false, extra: false },\r\n      4: { uid: 4, value: 0, player: 0, aktywny: false, extra: false },\r\n      5: { uid: 5, value: 0, player: 0, aktywny: false, extra: false },\r\n      6: { uid: 6, value: 0, player: 0, aktywny: false, extra: false },\r\n      7: { uid: 7, value: 0, player: 0, aktywny: false, extra: false },\r\n      8: { uid: 8, value: 0, player: 0, aktywny: false, extra: false },\r\n      9: { uid: 9, value: 0, player: 0, aktywny: false, extra: false },\r\n      10: { uid: 10, value: 0, player: 0, aktywny: false, extra: false },\r\n      11: { uid: 11, value: 0, player: 0, aktywny: false, extra: false },\r\n      12: { uid: 12, value: 2, player: 2, aktywny: false, extra: false },\r\n      13: { uid: 13, value: 0, player: 0, aktywny: false, extra: false },\r\n      14: { uid: 14, value: 0, player: 0, aktywny: false, extra: false },\r\n    },\r\n    paths: [\r\n      [2, 1, 0, 5, 6, 7, 8, 9, 4, 3],\r\n      [12, 11, 10, 5, 6, 7, 8, 9, 14, 13],\r\n    ],\r\n    render: [\r\n      [0, 1, 2, 3, 4],\r\n      [5, 6, 7, 8, 9],\r\n      [10, 11, 12, 13, 14],\r\n    ],\r\n    orderSquares() {\r\n      console.debug(`BEGIN, coś:`, this);\r\n      const squares = [];\r\n      for (const kolumna of this.render) {\r\n        console.debug(`  kolumna:`, kolumna);\r\n        for (const uidSquare of kolumna) {\r\n          const square = this.squares[uidSquare];\r\n          console.debug(`  this.squares[${uidSquare}]: `, square);\r\n          squares.push(square);\r\n        }\r\n      }\r\n      console.debug(`END`, squares);\r\n      return squares;\r\n    },\r\n  };\r\n}\r\n\r\nclass Board extends React.Component {\r\n  fullSquares = MakeDefaultsState();\r\n  state = {\r\n    firstPlayer: 1,\r\n    squares: this.fullSquares.orderSquares(),\r\n  };\r\n  receipt = {\r\n    resolve: (value) => {},\r\n    reject: (reason) => {},\r\n  };\r\n\r\n  startGameLoop = async () => {\r\n    const fullSquaresState = this.state.squares;\r\n\r\n    console.log(\r\n      `START GRY :tada:`,\r\n      fullSquaresState[2].value,\r\n      fullSquaresState\r\n    );\r\n\r\n    let player = 1;\r\n    let aktywnePola = [];\r\n    //tu zaczynamy gre\r\n\r\n    // this.state.squares.forEach(() => {\r\n    //   console.log('square')})\r\n\r\n    while (true) {\r\n      // początek tury\r\n      console.error(\"THIS PLAYER: \", player);\r\n      this.reset_stanu_mety_i_startu_i_dezaktywacja_pól(\r\n        player,\r\n        fullSquaresState\r\n      );\r\n      const iloscOczek = this.rzucamy_kostką();\r\n      aktywnePola = this.sprawdza_dostępne_ruchy_i_aktywuj_pola(\r\n        iloscOczek,\r\n        player,\r\n        aktywnePola,\r\n        fullSquaresState\r\n      );\r\n      // if (!this.czy_jest_jakiekolwiek_aktywne_pole(iloscOczek)) {\r\n      if (aktywnePola.length === 0) {\r\n        player = this.change_player(player);\r\n        alert(\"Skończyły Ci się ruchy. Zmiana gracza.\");\r\n        this.koniec_tury();\r\n        continue;\r\n      }\r\n\r\n      const pole = await this.czekaj_na_wskazanie_pola(aktywnePola);\r\n      console.log(`czekaj_na_wskazanie_pola zrwóciło: `, pole);\r\n\r\n      this.wykonaj_ruch(pole, iloscOczek, player, fullSquaresState);\r\n\r\n      if (this.czy_wygrał_gracz(player)) {\r\n        this.reset_stanu_mety_i_startu_i_dezaktywacja_pól(\r\n          player,\r\n          fullSquaresState\r\n        );\r\n        break;\r\n      }\r\n\r\n      if (!this.sprawdz_extra_targetSquare()) {\r\n        player = this.change_player(player);\r\n        alert(\"Skończyły Ci się ruchy. Zmiana gracza.\");\r\n      }\r\n\r\n      this.koniec_tury();\r\n    }\r\n    //\r\n\r\n    this.koniec_gry();\r\n    console.log(`Gra się zakończyła, wygrał player: `, \"player\");\r\n  };\r\n\r\n  // aktualny_gracz = () => {\r\n  //   console.log(`pobierz pierwszego gracza`);\r\n  //   return 2;\r\n  // };\r\n\r\n  change_player = (player) => {\r\n    console.log(\"change PLAYER\");\r\n    if (player === 1) {\r\n      return 2;\r\n    } else {\r\n      return 1;\r\n    }\r\n  };\r\n\r\n  reset_stanu_mety_i_startu_i_dezaktywacja_pól = (player, fullSquaresState) => {\r\n    const squares = fullSquaresState;\r\n\r\n    for (let i = 0; i < squares.length; i++) {\r\n      squares[i].aktywny = false;\r\n    }\r\n    squares[2].player = 1;\r\n    squares[12].player = 2;\r\n    squares[3].player = 0;\r\n    squares[13].player = 0;\r\n\r\n    this.setState({ squares: squares });\r\n\r\n    console.log(`reset stanu mety i startu i dezaktywacja pól`);\r\n  };\r\n\r\n  rzucamy_kostką = () => {\r\n    const wynikKostki = Math.floor(Math.random() * (4 - 1 + 1) + 1);\r\n    console.warn(`wynik kostki:`, wynikKostki);\r\n    return wynikKostki;\r\n  };\r\n\r\n  currentPlayerPath = (player) => this.fullSquares.paths[player - 1];\r\n\r\n  sprawdza_dostępne_ruchy_i_aktywuj_pola = (\r\n    iloscOczek,\r\n    player,\r\n    aktywnePola,\r\n    fullSquaresState\r\n  ) => {\r\n    aktywnePola = [];\r\n\r\n    const squares = fullSquaresState;\r\n\r\n    const path = this.currentPlayerPath(player);\r\n\r\n    for (let i = 0; i < path.length; i++) {\r\n      if (!squares[path[i]].value <= 0) {\r\n        if (squares[path[i]].player === player) {\r\n          if (i + iloscOczek <= path.length - 1) {\r\n            if (squares[path[i + iloscOczek]].player !== player) {\r\n              squares[path[i]].aktywny = true;\r\n\r\n              aktywnePola.push(squares[path[i]]);\r\n            }\r\n          } else {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    console.log(aktywnePola);\r\n    this.setState({ squares: squares });\r\n    return aktywnePola;\r\n  };\r\n\r\n  czy_jest_jakiekolwiek_aktywne_pole = (player) => {\r\n    // if (player === 1) {\r\n    //   p1id\r\n    // } else {\r\n    //   p2id\r\n    // }\r\n    const tab = this.state.squares;\r\n    const isActive = tab.some(function(el) {\r\n      return el.aktywny === true;\r\n    });\r\n    console.log(\"Jest aktywne pole\", isActive); //true\r\n    return isActive;\r\n  };\r\n\r\n  czekaj_na_wskazanie_pola = async (pola) => {\r\n    console.log(`czekaj_na_wskazanie_pola: AKTYWACJA: `, pola);\r\n\r\n    const pole = await new Promise((resolve, reject) => {\r\n      console.log(`włąśnie zrobił się nowy PROMISE`, this.receipt);\r\n      this.receipt = { resolve, reject };\r\n    });\r\n\r\n    return pole;\r\n  };\r\n\r\n  wykonaj_ruch = (pole, iloscOczek, player, fullSquaresState) => {\r\n    // console.warn(pole.uid);\r\n    // console.warn(pole);\r\n    const position = pole.uid;\r\n\r\n    const squares = fullSquaresState;\r\n    const path = this.currentPlayerPath(player);\r\n    const index = path.findIndex((el) => {\r\n      return el === position;\r\n    });\r\n    const pathIndex = path[index];\r\n\r\n    const enemyPlayerPath = this.currentPlayerPath(this.change_player(player));\r\n\r\n    console.log(\r\n      \"player\",\r\n      squares[path[0]],\r\n      \"VS enemy\",\r\n      squares[enemyPlayerPath[0]]\r\n    );\r\n\r\n    console.log(path);\r\n    console.log(pathIndex);\r\n\r\n    const sourceSquare = squares[pathIndex];\r\n    console.log(sourceSquare);\r\n    const targetSquare = squares[path[index + iloscOczek]];\r\n    let enemyValue = squares[enemyPlayerPath[0]].value;\r\n    console.warn(enemyValue);\r\n\r\n    if (targetSquare.player !== 0) {\r\n      sourceSquare.value = sourceSquare.value - 1;\r\n      squares[enemyPlayerPath[0]].value = squares[enemyPlayerPath[0]].value + 1;\r\n      sourceSquare.player = 0;\r\n      targetSquare.player = player;\r\n    } else {\r\n      sourceSquare.value = sourceSquare.value - 1;\r\n      targetSquare.value = targetSquare.value + 1;\r\n      sourceSquare.player = 0;\r\n      targetSquare.player = player;\r\n    }\r\n\r\n    console.log(\r\n      \"player\",\r\n      squares[path[0]],\r\n      \"VS enemy\",\r\n      squares[enemyPlayerPath[0]]\r\n    );\r\n\r\n    this.setState({ squares: squares });\r\n    // console.log(\"DOCZEKAŁ użyto pola numer: \", position);\r\n  };\r\n\r\n  czy_wygrał_gracz = (player) => {\r\n    const squares = this.state.squares;\r\n    if ((squares[3].value === 2) || (squares[13].value === 2)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  sprawdz_extra_targetSquare = () => {\r\n    console.log(`sprawdz extra targetSquare`);\r\n    return false;\r\n  };\r\n\r\n  koniec_tury = () => {\r\n    console.log(`koniec tury`);\r\n  };\r\n\r\n  koniec_gry = () => {\r\n    console.log(`koniec gry`);\r\n    alert(\"PRZESZEDŁEŚ CAŁA GRĘ!! GRATULUJĘ!!\");\r\n    this.setState({ squares: MakeDefaultsState().orderSquares() });\r\n  };\r\n\r\n  ///\r\n  checkActive = () => {\r\n    \"funkcja sprawdzająca\";\r\n  };\r\n\r\n  handleClick = (square) => {\r\n    // console.log(`handleClick: `, square);\r\n    // const uid = square.uid;\r\n    // const value = square.value;\r\n    // console.log(`handleClick: value: ${value} position: `, uid);\r\n\r\n    if (this.receipt) {\r\n      const potwierdzenie = this.receipt;\r\n      potwierdzenie.resolve(square);\r\n    } else {\r\n      console.error(\" !  ojjojoj, brakuje paragonu\");\r\n    }\r\n  };\r\n  showPlayer = (player) => {\r\n    return player;\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <button onClick={this.startGameLoop}>START Gry</button>\r\n\r\n        <ul className=\"board\">\r\n          {this.fullSquares.render.map((kolumna) =>\r\n            kolumna\r\n              .map((uidSquare) => this.fullSquares.squares[uidSquare])\r\n              .map((square) => (\r\n                <Square\r\n                  key={square.uid}\r\n                  {...square}\r\n                  square={square}\r\n                  zmiana={this.handleClick}\r\n                />\r\n              ))\r\n          )}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport \"./styles.scss\";\nimport Board from \"./game/Board\";\n\n// var player = 1;\n\n// // const numbers = [1, 2, 3, 4, 5];\n// const numbers = [1, 2];\n\n// const items = numbers.map((numbers) => <Tile uuid={numbers} />);\n\nconst App = () => (\n  <>\n    <div>\n      <Board />\n    </div>\n  </>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}