{"version":3,"sources":["game/Square.js","game/Board.js","App.js","index.js"],"names":["Square","props","state","onClickAction","bind","update","square","zmiana","this","setState","event","preventDefault","className","aktywny","onClick","value","player","React","Component","MakeDefaultsStore","store","_base","A","uid","extra","B","C","D","E","F","_pathsForPlayers","dawid","damian","_render","receipt","resolve","reject","reason","getFirstPlayer","getPlayerPath","map","nextPlayer","renderSquares","kolumna","flat","Board","startGameLoop","a","console","log","error","dice","rzucamy_kostką","polaDoAktywacji","zwraca_pola_do_aktywacji","length","koniec_tury","czekaj_na_wskazanie_pola","pole","targetSquare","wykonaj_ruch","czy_wygrał_gracz","warn","koniec_gry","wynikKostki","Math","floor","random","forEach","idx","squares","push","czy_jest_jakiekolwiek_aktywne_pole","isActive","some","el","pola","Promise","playerPath","sourceIndex","findIndex","sourceSquare","alert","handleClick","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.300cc2c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.scss\";\r\n\r\n// const Square = ({ uid, square, aktywny, value, player, zmiana }) => (\r\n//   <button\r\n//     className={aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n//     onClick={() => {\r\n//       zmiana(square);\r\n//     }}\r\n//   >\r\n//     {value} {player}\r\n//   </button>\r\n// );\r\n\r\n// const Square = ({ uid, square, aktywny, value, player, zmiana }) => ;\r\nclass Square extends React.Component {\r\n  state = null; // square\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.onClickAction = this.onClickAction.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.square = props.square;\r\n    this.zmiana = props.zmiana;\r\n    this.square.update = this.update;\r\n  }\r\n\r\n  update() {\r\n    this.setState(this.square);\r\n  }\r\n\r\n  onClickAction(event) {\r\n    event.preventDefault();\r\n    this.zmiana(this.square);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.square.aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n        onClick={this.onClickAction}\r\n      >\r\n        {this.square.value} <br /> {this.square.player}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./Board.scss\";\r\n// import MakeDefaultsSquares from \"./STATE.js\";\r\n\r\nfunction MakeDefaultsStore() {\r\n  const update = () => {};\r\n\r\n  const store = {\r\n    _base: {\r\n      ///\r\n      A: {\r\n        uid: \"A\",\r\n        value: 2,\r\n        player: \"dawid\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      B: {\r\n        uid: \"B\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      C: {\r\n        uid: \"C\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      D: {\r\n        uid: \"D\",\r\n        value: 2,\r\n        player: \"damian\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      E: {\r\n        uid: \"E\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      F: {\r\n        uid: \"F\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      }\r\n    },\r\n    _pathsForPlayers: {\r\n      ///\r\n      dawid: [\"A\", \"B\", \"E\", \"F\"],\r\n      damian: [\"D\", \"E\", \"B\", \"C\"]\r\n    },\r\n    _render: [\r\n      ///\r\n      [\"A\", \"B\", \"C\"],\r\n      [\"D\", \"E\", \"F\"]\r\n    ],\r\n    receipt: {\r\n      resolve: value => {},\r\n      reject: reason => {}\r\n    },\r\n    getFirstPlayer() {\r\n      return \"dawid\";\r\n    },\r\n    getPlayerPath(player) {\r\n      // TODO: Co jak player nie istnieje?\r\n      return this._pathsForPlayers[player].map(uid => {\r\n        return this._base[uid];\r\n      });\r\n    },\r\n    nextPlayer: player => {\r\n      return player === \"dawid\" ? \"damian\" : \"dawid\";\r\n    },\r\n    renderSquares() {\r\n      return this._render\r\n        .map(kolumna => kolumna.map(uid => this._base[uid]))\r\n        .flat();\r\n    }\r\n  };\r\n  store.receipt = null;\r\n  return store;\r\n}\r\n\r\n///\r\n\r\n// const store = MakeDefaultsStore();\r\n// console.debug(`DEBUG:`, store.getPlayerPath(\"dawid\"));\r\n\r\n///\r\n\r\nclass Board extends React.Component {\r\n  store = MakeDefaultsStore();\r\n  state = {\r\n    renderSquares: this.store.renderSquares()\r\n  };\r\n\r\n  startGameLoop = async () => {\r\n    const store = this.store;\r\n\r\n    let player = store.getFirstPlayer();\r\n\r\n    console.log(`START GRY, zaczyna: ${player}`);\r\n\r\n    while (true) {\r\n      // początek tury\r\n      console.error(`Teraz player: ${player}`);\r\n\r\n      const dice = this.rzucamy_kostką();\r\n      const polaDoAktywacji = this.zwraca_pola_do_aktywacji({\r\n        store,\r\n        dice,\r\n        player\r\n      });\r\n\r\n      if (polaDoAktywacji.length === 0) {\r\n        player = store.nextPlayer(player);\r\n        this.koniec_tury();\r\n        continue;\r\n      }\r\n\r\n      const pole = await this.czekaj_na_wskazanie_pola(polaDoAktywacji);\r\n      console.log(`czekaj_na_wskazanie_pola zrwóciło: `, pole);\r\n\r\n      const targetSquare = this.wykonaj_ruch({ store, pole, dice, player });\r\n\r\n      if (this.czy_wygrał_gracz({ store, player })) {\r\n        break;\r\n      }\r\n\r\n      if (!targetSquare.extra) {\r\n        player = store.nextPlayer(player);\r\n        console.warn(\"::WHILE:: sprawdź extra: Zmiana gracza.\");\r\n      }\r\n\r\n      this.koniec_tury();\r\n    }\r\n    //\r\n\r\n    this.koniec_gry(player);\r\n    console.log(`Gra się zakończyła, wygrał player: `, player);\r\n  };\r\n\r\n  rzucamy_kostką = () => {\r\n    const wynikKostki = Math.floor(Math.random() * (4 - 0 + 1) + 0);\r\n    console.log(`wynik kostki:`, wynikKostki);\r\n    return wynikKostki;\r\n  };\r\n\r\n  zwraca_pola_do_aktywacji = ({ store, dice, player }) => {\r\n    const polaDoAktywacji = [];\r\n\r\n    const playerPath = store.getPlayerPath(player);\r\n\r\n    playerPath.forEach((square, idx, squares) => {\r\n      // TODO: Mona troche uprościć\r\n      if (!square.value <= 0) {\r\n        if (square.player === player) {\r\n          if (idx + dice <= squares.length - 1) {\r\n            const targetSquare = squares[idx + dice];\r\n            if (targetSquare.player !== player) {\r\n              square.aktywny = true;\r\n              polaDoAktywacji.push(square);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log(`zwraca_pola_do_aktywacji: `, polaDoAktywacji);\r\n    return polaDoAktywacji;\r\n  };\r\n\r\n  czy_jest_jakiekolwiek_aktywne_pole = player => {\r\n    const tab = this.state.squares;\r\n    const isActive = tab.some(function(el) {\r\n      return el.aktywny === true;\r\n    });\r\n    console.log(\"Jest aktywne pole\", isActive); //true\r\n    return isActive;\r\n  };\r\n\r\n  czekaj_na_wskazanie_pola = async pola => {\r\n    console.log(`czekaj_na_wskazanie_pola: AKTYWACJA: `, pola);\r\n  \r\n\r\n\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = true;\r\n      square.update();\r\n    }\r\n\r\n    const pole = await new Promise((resolve, reject) => {\r\n      this.receipt = { resolve, reject };\r\n    });\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = false;\r\n      square.update();\r\n    }\r\n\r\n    return pole;\r\n  };\r\n\r\n  wykonaj_ruch = ({ store, pole, dice, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const sourceIndex = playerPath.findIndex(el => {\r\n      return el === pole.uid;\r\n    });\r\n    const sourceSquare = pole;\r\n    const targetSquare = playerPath[sourceIndex + dice];\r\n\r\n    const enemyOnTargetSquare =\r\n      targetSquare.player !== player && targetSquare.value > 0;\r\n\r\n    if (enemyOnTargetSquare) {\r\n      // TODO: Handle multiple peons on single square\r\n      const enemyFirstSquare = store.getPlayerPath(store.nextPlayer(player))[0];\r\n      enemyFirstSquare.value += targetSquare.value;\r\n      targetSquare.player = null;\r\n      targetSquare.value = 0;\r\n    }\r\n\r\n    sourceSquare.value -= 1;\r\n    targetSquare.player = player;\r\n    targetSquare.value += 1;\r\n\r\n    if (sourceSquare.value === 0) {\r\n      sourceSquare.player = null;\r\n    }\r\n\r\n    sourceSquare.update();\r\n    targetSquare.update();\r\n\r\n    return targetSquare;\r\n  };\r\n\r\n  czy_wygrał_gracz = ({ store, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const lastSquare = playerPath[playerPath.length - 1];\r\n    return lastSquare.value === 2 ? true : false;\r\n  };\r\n\r\n  koniec_tury = () => {\r\n    console.log(`koniec tury`);\r\n  };\r\n\r\n  koniec_gry = () => {\r\n    console.log(`koniec gry; FUNKCJA, KONIEC GRY`);\r\n    alert(\"PRZESZEDŁEŚ CAŁA GRĘ!! GRATULUJĘ!!\");\r\n  };\r\n\r\n  handleClick = square => {\r\n    if (this.receipt) {\r\n      const potwierdzenie = this.receipt;\r\n      potwierdzenie.resolve(square);\r\n    } else {\r\n      console.error(\" !  ojjojoj, brakuje paragonu\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button onClick={this.startGameLoop}>START Gry</button>\r\n\r\n        <ul className=\"board\">\r\n          {this.state.renderSquares.map(square => (\r\n            <Square\r\n              key={square.uid}\r\n              {...square}\r\n              square={square}\r\n              zmiana={this.handleClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","import React from \"react\";\nimport \"./styles.scss\";\nimport Board from \"./game/Board\";\n\n// var player = 1;\n\n// // const numbers = [1, 2, 3, 4, 5];\n// const numbers = [1, 2];\n\n// const items = numbers.map((numbers) => <Tile uuid={numbers} />);\n\nconst App = () => (\n  <>\n    <div>\n      <Board />\n    </div>\n  </>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}