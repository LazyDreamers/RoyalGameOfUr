{"version":3,"sources":["game/Square.js","game/Board.js","App.js","index.js"],"names":["Square","props","state","onClickAction","bind","update","square","zmiana","this","setState","event","preventDefault","className","aktywny","onClick","value","player","React","Component","Delay","delay","a","Promise","resolve","setTimeout","MakeDefaultsStore","store","_base","A","uid","extra","B","C","D","E","F","G","H","I","J","_pathsForPlayers","dawid","damian","_render","getFirstPlayer","getPlayerPath","map","nextPlayer","renderSquares","kolumna","flat","Board","startGameLoop","console","log","error","dice","rzucamy_kostką","polaDoAktywacji","zwraca_pola_do_aktywacji","length","koniec_tury","czekaj_na_wskazanie_pola","pole","targetSquare","wykonaj_ruch","czy_wygrał_gracz","warn","koniec_gry","wynikKostki","Math","floor","random","forEach","idx","squares","push","czy_jest_jakiekolwiek_aktywne_pole","isActive","some","el","pola","reject","receipt","playerPath","enemyPath","sourceIndex","findIndex","squareOnPath","sourceSquare","enemyFirstSquare","playerLastSquare","alert","handleClick","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fba26bf2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Square.scss\";\r\n\r\n// const Square = ({ uid, square, aktywny, value, player, zmiana }) => (\r\n//   <button\r\n//     className={aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n//     onClick={() => {\r\n//       zmiana(square);\r\n//     }}\r\n//   >\r\n//     {value} {player}\r\n//   </button>\r\n// );\r\n\r\n// const Square = ({ uid, square, aktywny, value, player, zmiana }) => ;\r\nclass Square extends React.Component {\r\n  state = null; // square\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.onClickAction = this.onClickAction.bind(this);\r\n    this.update = this.update.bind(this);\r\n    this.square = props.square;\r\n    this.zmiana = props.zmiana;\r\n    this.square.update = this.update;\r\n  }\r\n\r\n  update() {\r\n    this.setState(this.square);\r\n  }\r\n\r\n  onClickAction(event) {\r\n    event.preventDefault();\r\n    this.zmiana(this.square);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className={this.square.aktywny ? \"bodyActive\" : \"bodyInactive\"}\r\n        onClick={this.onClickAction}\r\n      >\r\n        {this.square.value} <br /> {this.square.player}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import React from \"react\";\r\nimport Square from \"./Square\";\r\nimport \"./Board.scss\";\r\n// import MakeDefaultsSquares from \"./STATE.js\";\r\n\r\nasync function Delay(delay) {\r\n  return new Promise(resolve => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n}\r\n\r\nfunction MakeDefaultsStore() {\r\n  const update = () => {};\r\n\r\n  const store = {\r\n    _base: {\r\n      ///\r\n      A: {\r\n        uid: \"A\",\r\n        value: 2,\r\n        player: \"dawid\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      B: {\r\n        uid: \"B\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      C: {\r\n        uid: \"C\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      D: {\r\n        uid: \"D\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      E: {\r\n        uid: \"E\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      F: {\r\n        uid: \"F\",\r\n        value: 2,\r\n        player: \"damian\",\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      G: {\r\n        uid: \"G\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      H: {\r\n        uid: \"H\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      I: {\r\n        uid: \"I\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      },\r\n      J: {\r\n        uid: \"J\",\r\n        value: 0,\r\n        player: null,\r\n        aktywny: false,\r\n        extra: false,\r\n        update\r\n      }\r\n    },\r\n    _pathsForPlayers: {\r\n      ///\r\n      dawid: [\"A\", \"B\", \"C\", \"D\", \"E\"],\r\n      damian: [\"F\", \"G\", \"H\", \"I\", \"J\"]\r\n    },\r\n    _render: [\r\n      ///\r\n      [\"A\", \"B\", \"C\", \"D\", \"E\"],\r\n      [\"F\", \"G\", \"H\", \"I\", \"J\"]\r\n    ],\r\n    getFirstPlayer() {\r\n      return \"dawid\";\r\n    },\r\n    getPlayerPath(player) {\r\n      // TODO: Co jak player nie istnieje?\r\n      return this._pathsForPlayers[player].map(uid => {\r\n        return this._base[uid];\r\n      });\r\n    },\r\n    nextPlayer: player => {\r\n      return player === \"dawid\" ? \"damian\" : \"dawid\";\r\n    },\r\n    renderSquares() {\r\n      return this._render\r\n        .map(kolumna => kolumna.map(uid => this._base[uid]))\r\n        .flat();\r\n    },\r\n  \r\n  }\r\n  store.receipt = null;\r\n  return store;\r\n}\r\n\r\n///\r\n\r\n// const store = MakeDefaultsStore();\r\n// console.debug(`DEBUG:`, store.getPlayerPath(\"dawid\"));\r\n\r\n///\r\n\r\nclass Board extends React.Component {\r\n  \r\n  store =  MakeDefaultsStore()\r\n  state = {\r\n    renderSquares: this.store.renderSquares()\r\n  };\r\n\r\n  startGameLoop = async () => {\r\n    const store = this.store;\r\n\r\n    let player = store.getFirstPlayer();\r\n\r\n    console.log(`START GRY, zaczyna: ${player}`);\r\n\r\n    while (true) {\r\n      await Delay(500);\r\n\r\n      // początek tury\r\n      console.error(`Teraz player: ${player}`);\r\n\r\n      const dice = this.rzucamy_kostką();\r\n      const polaDoAktywacji = this.zwraca_pola_do_aktywacji({\r\n        store,\r\n        dice,\r\n        player\r\n      });\r\n\r\n      if (polaDoAktywacji.length === 0) {\r\n        player = store.nextPlayer(player);\r\n        this.koniec_tury();\r\n        continue;\r\n      }\r\n\r\n      const pole = await this.czekaj_na_wskazanie_pola(polaDoAktywacji);\r\n      console.log(`czekaj_na_wskazanie_pola zrwóciło: `, pole);\r\n\r\n      const targetSquare = this.wykonaj_ruch({ store, pole, dice, player });\r\n\r\n      if (this.czy_wygrał_gracz({ store, player })) {\r\n        break;\r\n      }\r\n\r\n      if (!targetSquare.extra) {\r\n        player = store.nextPlayer(player);\r\n        console.warn(\"::WHILE:: sprawdź extra: Zmiana gracza.\");\r\n      }\r\n\r\n      this.koniec_tury();\r\n    }\r\n    //\r\n\r\n    this.koniec_gry(player);\r\n    console.log(`Gra się zakończyła, wygrał player: `, player);\r\n    console.log(this.state.renderSquares)\r\n  };\r\n\r\n  rzucamy_kostką = () => {\r\n    const wynikKostki = Math.floor(Math.random() * (4 - 0 + 1) + 0);\r\n    console.log(`wynik kostki:`, wynikKostki);\r\n    return wynikKostki;\r\n    // return 2;\r\n  };\r\n\r\n  zwraca_pola_do_aktywacji = ({ store, dice, player }) => {\r\n    const polaDoAktywacji = [];\r\n\r\n    const playerPath = store.getPlayerPath(player);\r\n\r\n    playerPath.forEach((square, idx, squares) => {\r\n      // TODO: Mona troche uprościć\r\n      if (!square.value <= 0) {\r\n        if (square.player === player) {\r\n          if (idx + dice <= squares.length - 1) {\r\n            const targetSquare = squares[idx + dice];\r\n            if (targetSquare.player !== player) {\r\n              square.aktywny = true;\r\n              polaDoAktywacji.push(square);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    console.log(`zwraca_pola_do_aktywacji: `, polaDoAktywacji);\r\n    return polaDoAktywacji;\r\n  };\r\n\r\n  czy_jest_jakiekolwiek_aktywne_pole = player => {\r\n    const tab = this.state.squares;\r\n    const isActive = tab.some(function(el) {\r\n      return el.aktywny === true;\r\n    });\r\n    console.log(\"Jest aktywne pole\", isActive); //true\r\n    return isActive;\r\n  };\r\n\r\n  czekaj_na_wskazanie_pola = async pola => {\r\n    console.log(`czekaj_na_wskazanie_pola: AKTYWACJA: `, pola);\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = true;\r\n      square.update();\r\n    }\r\n\r\n    const pole = await new Promise((resolve, reject) => {\r\n      this.receipt = { resolve, reject };\r\n    });\r\n\r\n    for (const square of pola) {\r\n      square.aktywny = false;\r\n      square.update();\r\n    }\r\n\r\n    return pole;\r\n  };\r\n\r\n  wykonaj_ruch = ({ store, pole, dice, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const enemyPath = store.getPlayerPath(store.nextPlayer(player));\r\n    const state = this.state.renderSquares;\r\n    const sourceIndex = playerPath.findIndex(squareOnPath => {\r\n      return squareOnPath.uid === pole.uid;\r\n    });\r\n    const sourceSquare = pole;\r\n    const targetSquare = playerPath[sourceIndex + dice];\r\n    const enemyFirstSquare = enemyPath[0];\r\n    const playerLastSquare = playerPath[playerPath.length - 1];\r\n\r\n    console.log(\"PlayerPath\", playerPath);\r\n    console.log(\"SourceSquare\", sourceSquare);\r\n    console.log(\"sourceIndex\", sourceIndex);\r\n    console.log(\"Target\", targetSquare);\r\n    console.log(\"Enemy\", enemyPath);\r\n    console.log(\"Enemy\", enemyFirstSquare);\r\n    console.log(\"STATE\", state);\r\n\r\n    if (targetSquare.player === store.nextPlayer()) {\r\n      enemyFirstSquare.value += 1;\r\n    }\r\n\r\n    sourceSquare.value -= 1;\r\n    targetSquare.value += 1;\r\n    targetSquare.player = player;\r\n\r\n    if (sourceSquare.value === 0) {\r\n      sourceSquare.player = null;\r\n    }\r\n\r\n    if (targetSquare.uid === playerLastSquare.uid) {\r\n      targetSquare.player = null;\r\n    }\r\n\r\n    sourceSquare.update();\r\n    targetSquare.update();\r\n    enemyFirstSquare.update();\r\n\r\n    return targetSquare;\r\n  };\r\n\r\n  czy_wygrał_gracz = ({ store, player }) => {\r\n    const playerPath = store.getPlayerPath(player);\r\n    const lastSquare = playerPath[playerPath.length - 1];\r\n    return lastSquare.value === 2 ? true : false;\r\n  };\r\n\r\n  koniec_tury = () => {\r\n    console.log(`koniec tury`);\r\n  };\r\n\r\n  koniec_gry = () => {\r\n    const squares = this.state.renderSquares\r\n\r\n    for (const square of squares) {\r\n      square.value = 0;\r\n      square.player = null;\r\n      square.aktywny = false      \r\n    }\r\n    squares[0].player = \"dawid\";\r\n    squares[5].player = \"damian\";\r\n    squares[0].value = 2;\r\n    squares[5].value = 2;\r\n\r\n    this.setState({renderSquares: squares})\r\n    console.log(`koniec gry; FUNKCJA, KONIEC GRY`);\r\n    alert(\"PRZESZEDŁEŚ CAŁA GRĘ!! GRATULUJĘ!!\");\r\n\r\n    \r\n    \r\n  };\r\n\r\n  handleClick = square => {\r\n    if (this.receipt) {\r\n      const potwierdzenie = this.receipt;\r\n      potwierdzenie.resolve(square);\r\n    } else {\r\n      console.error(\" !  ojjojoj, brakuje paragonu\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <button onClick={this.startGameLoop}>START Gry</button>\r\n\r\n        <ul className=\"board\">\r\n          {this.state.renderSquares.map(square => (\r\n            <Square\r\n              key={square.uid}\r\n              {...square}\r\n              square={square}\r\n              zmiana={this.handleClick}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n\r\n\r\n","import React from \"react\";\nimport \"./styles.scss\";\nimport Board from \"./game/Board\";\n\n// var player = 1;\n\n// // const numbers = [1, 2, 3, 4, 5];\n// const numbers = [1, 2];\n\n// const items = numbers.map((numbers) => <Tile uuid={numbers} />);\n\nconst App = () => (\n  <>\n    <div>\n      <Board />\n    </div>\n  </>\n);\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}